/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aquino.webParser;

import com.aquino.webParser.model.Book;
import com.aquino.webParser.utilities.Connect;
import com.aquino.webParser.utilities.FileUtility;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.awt.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.function.Function;
import java.util.stream.Stream;
import javax.swing.*;

/**
 *
 * @author alex
 */
public class AuthorPublisherAutoFill extends javax.swing.JFrame {

    private XSSFWorkbook workbook;
    private AutoFillService autoFillService;

    /**
     * Creates new form AuthorPublisherAutoFill2
     */
    public AuthorPublisherAutoFill() {
        initComponents();
    }

    public AuthorPublisherAutoFill(AutoFillService autoFillService) throws HeadlessException {
        this();
        this.autoFillService = autoFillService;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        autoFillButton = new javax.swing.JButton();
        bookRowContainer = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        textFileName = new javax.swing.JTextPane();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jScrollPane1 = new javax.swing.JScrollPane();
        textConsole = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        autoFillButton.setText("Auto Fill");
        jPanel1.add(autoFillButton, java.awt.BorderLayout.PAGE_END);
        jPanel1.add(bookRowContainer, java.awt.BorderLayout.CENTER);

        jScrollPane2.setViewportView(textFileName);

        jScrollPane1.setViewportView(textConsole);

        fileMenu.setText("File");

        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        closeMenuItem.setText("Close");
        fileMenu.add(closeMenuItem);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(filler1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthorPublisherAutoFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthorPublisherAutoFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthorPublisherAutoFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthorPublisherAutoFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AuthorPublisherAutoFill frame =  new AuthorPublisherAutoFill();
                frame.setSize(1400, 600);
                frame.setLocationRelativeTo(null);
                frame.bookRowContainer.add(new BookRow());
                frame.bookRowContainer.add(new BookRow());
                frame.bookRowContainer.add(new BookRow());

                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton autoFillButton;
    private javax.swing.JScrollPane bookRowContainer;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTextPane textConsole;
    private javax.swing.JTextPane textFileName;
    // End of variables declaration//GEN-END:variables

    private final Action openAction = Handlers.anonymousEventClass("Open", (event) -> {
        try {
            File file = FileUtility.openFile(bookRowContainer);
            workbook = Connect.openExistingWorkbook(file);
            autoFillService.readBooks(workbook)
                    .stream()
                    .forEach(model -> {
                        bookRowContainer.add(new BookRow(model));
                    });
            setFileLabel(file.getName());
//            enableActions();
        } catch (IllegalArgumentException | NullPointerException | FileNotFoundException e) {
            textConsole.setText(String.format("Open failed: {0}", e.getMessage()));
        }
    });

   private final Action autoFillAction = Handlers.anonymousEventClass("Auto Fill", (event) -> {
        try {
            Stream.of(bookRowContainer.getComponents())
                    .filter(c -> c instanceof BookRow)
                    .map(c -> (BookRow) c)
                    .forEach(br ->{
                        var afm = br.getAutoFillModel();
                        var id = autoFillService.insertAuthor(afm.getAuthor());
                        var link = autoFillService.getAuthorLink(id);
                        br.setAuthorLink(id, link);
                        afm.UpdateBook();
                        //TODO insert pub and add link
                    });
//            enableActions();
        } catch (IllegalArgumentException | NullPointerException e) {
            textConsole.setText(String.format("Auto Fill fail: {0}", e.getMessage()));
        }
    });

    private final Action saveAction = Handlers.anonymousEventClass("Save", (event) -> {
        try {
            var updater = new ExcelUpdater(workbook);
            Stream.of(bookRowContainer.getComponents())
                    .filter(c -> c instanceof BookRow)
                    .map(c -> (BookRow) c)
                    .forEach(br ->{
                        var afm = br.getAutoFillModel();
                        updater.UpdateBook(afm.getBookPair().getLeft(), afm.getBookPair().getRight());
                    });
//            enableActions();
        } catch (IllegalArgumentException | NullPointerException e) {
            textConsole.setText(String.format("save fail: {0}", e.getMessage()));
            e.printStackTrace();
        }
    });


    private void setFileLabel(String fileName) {
        textFileName.setText(fileName);
    }
}
